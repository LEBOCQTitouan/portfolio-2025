import React, { useRef } from "react";

import { useFrame } from "@react-three/fiber";
import { Group, Mesh } from "three";
import { MeshTransmissionMaterial } from "@react-three/drei";

const Planet = () => {
  const meshRef = useRef<Mesh>(null!);

  useFrame(() => {
    meshRef.current.rotation.y++;
  });

  return (
    <mesh ref={meshRef} scale={0.3}>
      <sphereGeometry />
      <meshStandardMaterial />
    </mesh>
  );
};

/* Auto-generated by: https://github.com/pmndrs/gltfjsx */
const Dome = () => {
  // TODO : need to remove error on nodes.Dome.geometry
  return (
    <group dispose={null}>
      <mesh>
        <boxGeometry />
        <MeshTransmissionMaterial
          backside
          backsideThickness={-1}
          thickness={0.2}
          anisotropicBlur={0.02}
          //temporalDistortion={0.1}
          //distortionScale={0.5}
          //distortion={1}
        />
      </mesh>
    </group>
  );
};

export const Avatar = () => {
  const groupRef = useRef<Group>(null!);

  // useFrame(({ pointer, viewport }) => {
  //   const x = (pointer.x * viewport.width) / 2.5;
  //   const y = (pointer.y * viewport.height) / 2.5;
  //   groupRef.current.lookAt(x, y, 1);
  // });

  return (
    <group ref={groupRef} dispose={null}>
      <Dome />
      <Planet />
    </group>
  );
};
