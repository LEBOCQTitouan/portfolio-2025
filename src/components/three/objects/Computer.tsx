/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React from "react";
import * as THREE from "three";
import { GLTF } from "three-stdlib";
import { useGLTF } from "@react-three/drei";

// TODO : remove the eslint disable line
type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
    Cube001: THREE.Mesh;
    Cube002: THREE.Mesh;
  };

  materials: {}; // eslint-disable-line
};

/*
 * TODO : reverse the model in the GLB file to remove useless Euler creation in component
 * */
export function Computer(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/computer.glb") as GLTFResult; // eslint-disable-line

  let adjustedRotation: THREE.Euler;
  if (props.rotation) {
    const eulerProp = props.rotation as THREE.Euler;
    adjustedRotation = new THREE.Euler(
      eulerProp.x,
      eulerProp.y + Math.PI,
      eulerProp.z,
    );
  } else adjustedRotation = new THREE.Euler(0, Math.PI, 0);

  return (
    // he glb mesh is initialy not facing the cam
    <group {...props} rotation={adjustedRotation} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={nodes.Cube.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={nodes.Cube001.material}
        position={[0, 0.669, 0]}
        scale={1.141}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={nodes.Cube002.material}
        position={[0, 2.799, 0.699]}
        scale={2.358}
      />
    </group>
  );
}
