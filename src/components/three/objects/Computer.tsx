/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React from "react";
import * as THREE from "three";
import { GLTF } from "three-stdlib";
import { useGLTF } from "@react-three/drei";

type GLTFResult = GLTF & {
  nodes: {
    coffeMug: THREE.Mesh;
    mouse: THREE.Mesh;
    keyboard: THREE.Mesh;
    lamp: THREE.Mesh;
    computerBase: THREE.Mesh;
    computerScreen: THREE.Mesh;
  };
  materials: {}; // eslint-disable-line
};

// TODO : [blender] simplify the model
export function Computer() {
  const { nodes, materials } = useGLTF("/computer.glb") as GLTFResult; // eslint-disable-line

  return (
    // he glb mesh is initialy not facing the cam
    <group scale={0.1} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.coffeMug.geometry}
        material={nodes.coffeMug.material}
        position={[-4.5, 0.5, -1.5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mouse.geometry}
        material={nodes.mouse.material}
        position={[-4.5, 0.5, -4.5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.keyboard.geometry}
        material={nodes.keyboard.material}
        position={[-0.4, 3.8, 0.9]}
        scale={0.9}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.lamp.geometry}
        material={nodes.lamp.material}
        position={[7, 1.7, -1]}
        rotation={[0, 0.8, 0]}
        scale={0.9}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.computerBase.geometry}
        material={nodes.computerBase.material}
        position={[-0.5, 1, 0.5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.computerScreen.geometry}
        material={nodes.computerScreen.material}
        position={[-0.4, 3.8, 0.9]}
        scale={0.9}
      />
    </group>
  );
}
